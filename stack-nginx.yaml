---
apiVersion: v1
kind: Namespace
metadata:
  name: lemmy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgres
  name: postgres
  namespace: lemmy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          protocol: TCP
        env:
          - name: POSTGRES_USER
            value: lemmy
          - name: POSTGRES_PASSWORD
            value: lemmy
          - name: POSTGRES_DB
            value: lemmy
---
kind: Service
apiVersion: v1
metadata:
  name: lemmy-db
  namespace: lemmy
spec:
  selector:
    app: postgres
  ports:
  - protocol: TCP
    port: 5432
    name: tcp
    targetPort: 5432
---
kind: Service
apiVersion: v1
metadata:
  name: lemmy-db-external
  namespace: lemmy
spec:
  selector:
    app: postgres
  ports:
  - protocol: TCP
    port: 5432
    name: tcp
    targetPort: 5432
    nodePort: 30433
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config.hjson
  namespace: lemmy
data:
  config.hjson: |
    {
      # for more info about the config, check out the documentation
      # https://join-lemmy.org/docs/en/administration/configuration.html

      database: {
        host: lemmy-db
        password: "lemmy"
      }
      hostname: "lemmy.webster.home"
      pictrs: {
        url: "http://pictrs:8080/"
        api_key: "lemmy"
      }
      email: {
        smtp_server: "postfix:25"
        smtp_from_address: "noreply@lemmy.webster.home"
        tls_type: "none"
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: lemmy
  name: lemmy
  namespace: lemmy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lemmy
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: lemmy
    spec:
      containers:
      - name: lemmy
        image: ghcr.io/ubergeek77/lemmy:0.18.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8536
          protocol: TCP
        env:
          - name: RUST_LOG
            value: warn
          - name: RUST_BACKTRACE
            value: full
          - name: LEMMY_DATABASE_URL
            value: postgres://lemmy:lemmy@lemmy-db:5432/lemmy
        volumeMounts:
        - name: config
          mountPath: /config/config.hjson
          subPath: config.hjson
      volumes:
      - name: config
        configMap:
          name: config.hjson
          items:
            - key: config.hjson
              path: config.hjson
---
kind: Service
apiVersion: v1
metadata:
  name: lemmy
  namespace: lemmy
spec:
  selector:
    app: lemmy
  ports:
  - protocol: TCP
    port: 80
    name: tcp
    targetPort: 8536
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: lemmy-ui
  name: lemmy-ui
  namespace: lemmy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lemmy-ui
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: lemmy-ui
    spec:
      containers:
      - name: lemmy-ui
        image: ghcr.io/ubergeek77/lemmy-ui:0.18.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 1234
          protocol: TCP
        env:
          - name: LEMMY_UI_LEMMY_INTERNAL_HOST
            value: "lemmy:80"
          - name: LEMMY_UI_LEMMY_EXTERNAL_HOST
            value: "lemmy.webster.home"
          - name: LEMMY_HTTPS
            value: "true"
---
kind: Service
apiVersion: v1
metadata:
  name: lemmy-ui
  namespace: lemmy
spec:
  selector:
    app: lemmy-ui
  ports:
  - protocol: TCP
    port: 80
    name: tcp
    targetPort: 1234
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pictrs
  name: pictrs
  namespace: lemmy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pictrs
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: pictrs
    spec:
      containers:
      - name: pictrs
        image: asonix/pictrs:0.4.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          protocol: TCP
        env:
          #- name: PICTRS_OPENTELEMETRY_URL
          #  value: "http://otel:4137"
          - name: PICTRS__API_KEY
            value: lemmy
          - name: RUST_LOG
            value: debug
          - name: RUST_BACKTRACE
            value: full
          - name: PICTRS__MEDIA__VIDEO_CODEC
            value: vp9
          - name: PICTRS__MEDIA__GIF__MAX_WIDTH
            value: "256"
          - name: PICTRS__MEDIA__GIF__MAX_HEIGHT
            value: "256"
          - name: PICTRS__MEDIA__GIF__MAX_AREA
            value: "65536"
          - name: PICTRS__MEDIA__GIF__MAX_FRAME_COUNT
            value: "400"
---
kind: Service
apiVersion: v1
metadata:
  name: pictrs
  namespace: lemmy
spec:
  selector:
    app: pictrs
  ports:
  - protocol: TCP
    port: 8080
    name: tcp
    targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lemmy-nginx
  namespace: lemmy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lemmy-nginx
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: lemmy-nginx
    spec:
      containers:
        - name: lemmy
          image: nginx:1-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: cache
              mountPath: /var/cache/nginx
            - name: run
              mountPath: /var/run
            - name: tmp
              mountPath: /tmp/nginx
            - mountPath: /etc/nginx/nginx.conf
              name: nginx-conf
              subPath: nginx.conf  # https://stackoverflow.com/a/39479928
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          resources:
            requests:
              cpu: 20m
              memory: 50Mi
              ephemeral-storage: 100Mi
            limits:
              memory: 50Mi
              ephemeral-storage: 500Mi
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
      volumes:
        - name: cache
          emptyDir: {}
        - name: run
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: nginx-conf
          configMap:
            name: lemmy-nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: lemmy-nginx-config
  namespace: lemmy
data:
  nginx.conf: |
    worker_processes 1;
    events {
        worker_connections 1024;
    }
    http {
        upstream lemmy {
            # this needs to map to the lemmy (server) docker service hostname
            server "lemmy:80";
        }
        upstream lemmy-ui {
            # this needs to map to the lemmy-ui docker service hostname
            server "lemmy-ui:80";
        }

        server {
            # this is the port inside docker, not the public one yet
            listen 8080;
            # change if needed, this is facing the public web
            server_name localhost;
            server_tokens off;

            gzip on;
            gzip_types text/css application/javascript image/svg+xml;
            gzip_vary on;

            # Upload limit, relevant for pictrs
            client_max_body_size 20M;

            add_header X-Frame-Options SAMEORIGIN;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";

            # frontend general requests
            location / {
                # distinguish between ui requests and backend
                # don't change lemmy-ui or lemmy here, they refer to the upstream definitions on top
                set $proxpass "http://lemmy-ui";

                if ($http_accept = "application/activity+json") {
                  set $proxpass "http://lemmy";
                }
                if ($http_accept = "application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"") {
                  set $proxpass "http://lemmy";
                }
                if ($request_method = POST) {
                  set $proxpass "http://lemmy";
                }
                proxy_pass $proxpass;

                rewrite ^(.+)/+$ $1 permanent;
                # Send actual client IP upstream
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            # backend
            location ~ ^/(api|pictrs|feeds|nodeinfo|.well-known) {
                proxy_pass "http://lemmy";
                # proxy common stuff
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";

                # Send actual client IP upstream
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: lemmy-nginx
  name: lemmy-nginx
  namespace: lemmy
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: lemmy-nginx
    service: nginx
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: lemmy-nginx
  name: lemmy-nginx-external
  namespace: lemmy
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
      #nodePort: 30333
  selector:
    app: lemmy-nginx
  type: NodePort