---
apiVersion: v1
kind: ConfigMap
metadata:
  name: lemmy-caddy-config
  namespace: lemmy
data:
  Caddyfile: |
    (caddy-common) {
        encode gzip
        header {
            -Server
            Strict-Transport-Security "max-age=31536000; include-subdomains;"
            X-XSS-Protection "1; mode=block"
            X-Frame-Options "DENY"
            X-Content-Type-Options nosniff
            Referrer-Policy  no-referrer-when-downgrade
            X-Robots-Tag "none"
        }
    }

    http://lemmy.webster.home {
      import caddy-common
      reverse_proxy   http://lemmy-ui {
      }

      @lemmy {
        path    /api/*
        path    /pictrs/*
        path    /feeds/*
        path    /nodeinfo/*
        path    /.well-known/*
      }

      @lemmy-hdr {
        header Accept application/*
      }

      handle @lemmy {
        reverse_proxy   http://lemmy
      }

      handle @lemmy-hdr {
        reverse_proxy   http://lemmy
      }

      @lemmy-post {
        method POST
      }

      handle @lemmy-post {
        reverse_proxy   http://lemmy
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: caddy
  name: caddy
  namespace: lemmy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: caddy
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: caddy
    spec:
      containers:
      - name: caddy
        image: caddy:alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          protocol: TCP
        volumeMounts:
          - mountPath: /etc/caddy/Caddyfile
            name: caddy-conf
            subPath: Caddyfile 
      volumes:
        - name: caddy-conf
          configMap:
            name: lemmy-caddy-config
            items:
              - key: Caddyfile
                path: Caddyfile
---
kind: Service
apiVersion: v1
metadata:
  name: caddy
  namespace: lemmy
spec:
  selector:
    app: caddy
  ports:
  - protocol: TCP
    port: 80
    name: tcp
    targetPort: 80
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: caddy-external
  namespace: lemmy
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
      #nodePort: 30333
  selector:
    app: caddy
  type: NodePort