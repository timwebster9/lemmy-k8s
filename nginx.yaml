apiVersion: apps/v1
kind: Deployment
metadata:
  name: lemmy-nginx
  namespace: lemmy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lemmy-nginx
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: lemmy-nginx
    spec:
      containers:
        - name: lemmy
          image: nginx:1-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: cache
              mountPath: /var/cache/nginx
            - name: run
              mountPath: /var/run
            - name: tmp
              mountPath: /tmp/nginx
            - mountPath: /etc/nginx/nginx.conf
              name: nginx-conf
              subPath: nginx.conf  # https://stackoverflow.com/a/39479928
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          resources:
            requests:
              cpu: 20m
              memory: 50Mi
              ephemeral-storage: 100Mi
            limits:
              memory: 50Mi
              ephemeral-storage: 500Mi
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
      volumes:
        - name: cache
          emptyDir: {}
        - name: run
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: nginx-conf
          configMap:
            name: lemmy-nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: lemmy-nginx-config
  namespace: lemmy
data:
  nginx.conf: |
    worker_processes 1;
    events {
        worker_connections 1024;
    }
    http {
        upstream lemmy {
            # this needs to map to the lemmy (server) docker service hostname
            server "lemmy:80";
        }
        upstream lemmy-ui {
            # this needs to map to the lemmy-ui docker service hostname
            server "lemmy-ui:80";
        }

        server {
            # this is the port inside docker, not the public one yet
            listen 8080;
            # change if needed, this is facing the public web
            server_name localhost;
            server_tokens off;

            gzip on;
            gzip_types text/css application/javascript image/svg+xml;
            gzip_vary on;

            # Upload limit, relevant for pictrs
            client_max_body_size 20M;

            add_header X-Frame-Options SAMEORIGIN;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";

            # frontend general requests
            location / {
                # distinguish between ui requests and backend
                # don't change lemmy-ui or lemmy here, they refer to the upstream definitions on top
                set $proxpass "http://lemmy-ui";

                if ($http_accept = "application/activity+json") {
                  set $proxpass "http://lemmy";
                }
                if ($http_accept = "application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"") {
                  set $proxpass "http://lemmy";
                }
                if ($request_method = POST) {
                  set $proxpass "http://lemmy";
                }
                proxy_pass $proxpass;

                rewrite ^(.+)/+$ $1 permanent;
                # Send actual client IP upstream
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            # backend
            location ~ ^/(api|pictrs|feeds|nodeinfo|.well-known) {
                proxy_pass "http://lemmy";
                # proxy common stuff
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";

                # Send actual client IP upstream
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: lemmy-nginx
  name: lemmy-nginx
  namespace: lemmy
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: lemmy-nginx
    service: nginx
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: lemmy-nginx
  name: lemmy-nginx-external
  namespace: lemmy
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
      #nodePort: 30333
  selector:
    app: lemmy-nginx
  type: NodePort