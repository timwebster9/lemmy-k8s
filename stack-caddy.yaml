---
apiVersion: v1
kind: Namespace
metadata:
  name: lemmy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgres
  name: postgres
  namespace: lemmy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          protocol: TCP
        env:
          - name: POSTGRES_USER
            value: lemmy
          - name: POSTGRES_PASSWORD
            value: lemmy
          - name: POSTGRES_DB
            value: lemmy
---
kind: Service
apiVersion: v1
metadata:
  name: lemmy-db
  namespace: lemmy
spec:
  selector:
    app: postgres
  ports:
  - protocol: TCP
    port: 5432
    name: tcp
    targetPort: 5432
---
kind: Service
apiVersion: v1
metadata:
  name: lemmy-db-external
  namespace: lemmy
spec:
  selector:
    app: postgres
  ports:
  - protocol: TCP
    port: 5432
    name: tcp
    targetPort: 5432
    nodePort: 30433
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config.hjson
  namespace: lemmy
data:
  config.hjson: |
    {
      # for more info about the config, check out the documentation
      # https://join-lemmy.org/docs/en/administration/configuration.html

      database: {
        host: lemmy-db
        password: "lemmy"
      }
      hostname: "lemmy.webster.home"
      pictrs: {
        url: "http://pictrs:8080/"
        api_key: "lemmy"
      }
      email: {
        smtp_server: "postfix:25"
        smtp_from_address: "noreply@lemmy.webster.home"
        tls_type: "none"
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: lemmy
  name: lemmy
  namespace: lemmy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lemmy
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: lemmy
    spec:
      containers:
      - name: lemmy
        image: ghcr.io/ubergeek77/lemmy:0.18.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8536
          protocol: TCP
        env:
          - name: RUST_LOG
            value: warn
          - name: RUST_BACKTRACE
            value: full
          - name: LEMMY_DATABASE_URL
            value: postgres://lemmy:lemmy@lemmy-db:5432/lemmy
        volumeMounts:
        - name: config
          mountPath: /config/config.hjson
          subPath: config.hjson
      volumes:
      - name: config
        configMap:
          name: config.hjson
          items:
            - key: config.hjson
              path: config.hjson
---
kind: Service
apiVersion: v1
metadata:
  name: lemmy
  namespace: lemmy
spec:
  selector:
    app: lemmy
  ports:
  - protocol: TCP
    port: 80
    name: tcp
    targetPort: 8536
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: lemmy-ui
  name: lemmy-ui
  namespace: lemmy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lemmy-ui
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: lemmy-ui
    spec:
      containers:
      - name: lemmy-ui
        image: ghcr.io/ubergeek77/lemmy-ui:0.18.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 1234
          protocol: TCP
        env:
          - name: LEMMY_UI_LEMMY_INTERNAL_HOST
            value: "lemmy:80"
          - name: LEMMY_UI_LEMMY_EXTERNAL_HOST
            value: "lemmy.webster.home"
          - name: LEMMY_HTTPS
            value: "true"
---
kind: Service
apiVersion: v1
metadata:
  name: lemmy-ui
  namespace: lemmy
spec:
  selector:
    app: lemmy-ui
  ports:
  - protocol: TCP
    port: 80
    name: tcp
    targetPort: 1234
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pictrs
  name: pictrs
  namespace: lemmy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pictrs
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: pictrs
    spec:
      containers:
      - name: pictrs
        image: asonix/pictrs:0.4.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          protocol: TCP
        env:
          #- name: PICTRS_OPENTELEMETRY_URL
          #  value: "http://otel:4137"
          - name: PICTRS__API_KEY
            value: lemmy
          - name: RUST_LOG
            value: debug
          - name: RUST_BACKTRACE
            value: full
          - name: PICTRS__MEDIA__VIDEO_CODEC
            value: vp9
          - name: PICTRS__MEDIA__GIF__MAX_WIDTH
            value: "256"
          - name: PICTRS__MEDIA__GIF__MAX_HEIGHT
            value: "256"
          - name: PICTRS__MEDIA__GIF__MAX_AREA
            value: "65536"
          - name: PICTRS__MEDIA__GIF__MAX_FRAME_COUNT
            value: "400"
---
kind: Service
apiVersion: v1
metadata:
  name: pictrs
  namespace: lemmy
spec:
  selector:
    app: pictrs
  ports:
  - protocol: TCP
    port: 8080
    name: tcp
    targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: lemmy-caddy-config
  namespace: lemmy
data:
  Caddyfile: |
    (caddy-common) {
        encode gzip
        header {
            -Server
            Strict-Transport-Security "max-age=31536000; include-subdomains;"
            X-XSS-Protection "1; mode=block"
            X-Frame-Options "DENY"
            X-Content-Type-Options nosniff
            Referrer-Policy  no-referrer-when-downgrade
            X-Robots-Tag "none"
        }
    }

    http://lemmy.webster.home {
      import caddy-common
      reverse_proxy   http://lemmy-ui {
      }

      @lemmy {
        path    /api/*
        path    /pictrs/*
        path    /feeds/*
        path    /nodeinfo/*
        path    /.well-known/*
      }

      @lemmy-hdr {
        header Accept application/*
      }

      handle @lemmy {
        reverse_proxy   http://lemmy
      }

      handle @lemmy-hdr {
        reverse_proxy   http://lemmy
      }

      @lemmy-post {
        method POST
      }

      handle @lemmy-post {
        reverse_proxy   http://lemmy
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: caddy
  name: caddy
  namespace: lemmy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: caddy
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: caddy
    spec:
      containers:
      - name: caddy
        image: caddy:alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          protocol: TCP
        volumeMounts:
          - mountPath: /etc/caddy/Caddyfile
            name: caddy-conf
            subPath: Caddyfile 
      volumes:
        - name: caddy-conf
          configMap:
            name: lemmy-caddy-config
            items:
              - key: Caddyfile
                path: Caddyfile
---
kind: Service
apiVersion: v1
metadata:
  name: caddy
  namespace: lemmy
spec:
  selector:
    app: caddy
  ports:
  - protocol: TCP
    port: 80
    name: tcp
    targetPort: 80
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: caddy-external
  namespace: lemmy
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
      #nodePort: 30333
  selector:
    app: caddy
  type: NodePort